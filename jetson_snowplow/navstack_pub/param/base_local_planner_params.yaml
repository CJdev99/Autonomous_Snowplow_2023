

TrajectoryPlannerROS:
  max_vel_x: 0.8
  min_vel_x: 0.4
  max_vel_theta: 0.99
  min_vel_theta: -0.99
  min_in_place_vel_theta: 0.65
  escape_vel: -0.55
  acc_lim_theta: 1
  acc_lim_x: 0.5
  acc_lim_Y: 0.5

  holonomic_robot: false
  meter_scoring: true

  xy_goal_tolerance: 0.4
  yaw_goal_tolerance: 0.4
  

  goal_distance_bias: 24.0
  path_distance_bias: 32.0
  occdist_scale: 0.01
  heading_lookahead: 0.5
  dwa: false

  oscillation_reset_dist: 0.5
  meter_scoring: true
  
  # TODO: fix parameters:
  TrajectoryPlannerROS:

  # 
  acc_lim_x:  0.5
  acc_lim_y:  0.5
  acc_lim_theta: 1.00
  max_vel_x:  0.27
  min_vel_x:  0.20
  max_rotational_vel: 0.4 
  min_in_place_vel_theta: 0.27
  max_vel_theta: 0.1 
  min_vel_theta: -0.1 
  escape_vel: -0.19
  holonomic_robot: false

  xy_goal_tolerance: 1 
  yaw_goal_tolerance: 1.39626 # 80 degrees

  # make sure that the minimum velocity multiplied by the sim_period is less than twice the tolerance on a goal. Otherwise, the robot will prefer to rotate in place just outside of range of its target position rather than moving towards the goal.
  sim_time: 1.7 # set between 1 and 2. The higher he value, the smoother the path (though more samples would be required).
  sim_granularity: 0.025
  vx_samples: 3
  vtheta_samples: 3
  vtheta_samples: 20

  goal_distance_bias: 0.8
  path_distance_bias: 0.6
  occdist_scale: 0.01
  heading_lookahead: 0.325
#   dwa: true

  oscillation_reset_dist: 0.05
  meter_scoring: true

#global planner
NavfnROS:
  allow_unknown: true
  visualize_potential: false
  default_tolerance: 10
